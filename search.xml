<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python渗透之路</title>
    <url>/2020/03/12/python%E6%B8%97%E9%80%8F%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<hr>
<h3 id="python2和python3的一些区别"><a href="#python2和python3的一些区别" class="headerlink" title="python2和python3的一些区别"></a>python2和python3的一些区别</h3><figure class="highlight plain"><table><tr><td class="code"><pre class="line-numbers language-hljs plain"><code class="language-hljs plain">pip install github3.py #python2<br>pip3 install github3.py #python3<br><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></td></tr></table></figure>

<p>b = b”example”    # bytes object   </p>
<p>s = “example”     # str object  </p>
<ul>
<li>chj=str.encode(c)  str to bytes </li>
<li>chj=bytes.decode(c) bytes to str</li>
</ul>
<h3 id="python网络编程"><a href="#python网络编程" class="headerlink" title="python网络编程"></a>python网络编程</h3><h4 id="1-简单的一个TCP客户端"><a href="#1-简单的一个TCP客户端" class="headerlink" title="1.简单的一个TCP客户端"></a>1.简单的一个TCP客户端</h4><figure class="highlight plain"><table><tr><td class="code"><pre class="line-numbers language-hljs plain"><code class="language-hljs plain"># coding&#x3D;utf-8<br><br>import socket<br>target_host &#x3D; "www.orld.com"<br>target_port &#x3D; 80<br># 建立一个 socket 对象<br># AF_INET 参数说明我们将使用标准的 IPv4地址或者主机名<br># SOCK_STREAM 说明这将是一个 TCP 客户端<br>client &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br><br># 连接客户端<br>client.connect((target_host,target_port))<br><br># 发送一些数据<br>client.send(str.encode("GET &#x2F; HTTP&#x2F;1.1\r\nHost: www.orld.com\r\n\r\n"))<br><br># 接收一些数据<br>response &#x3D; client.recv(4096)<br><br>print (bytes.decode(response))<br><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></td></tr></table></figure>

<p>运行结果如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre class="line-numbers language-hljs plain"><code class="language-hljs plain">HTTP&#x2F;1.1 301 Moved Permanently<br>Cache-Control: s-maxage&#x3D;31536000<br>Location: http:&#x2F;&#x2F;orld.com&#x2F;<br>Server: api-gateway&#x2F;1.9.3.1<br>X-App-Name: Pro2-Renderer<br>X-Content-Type-Options: nosniff<br>X-Trace-Id: flhzOSvD40MNDY9Q3&#x2F;4G3XRa&#x2F;E8<br>X-XSS-Protection: 1; mode&#x3D;block<br>Content-Length: 0<br>Accept-Ranges: bytes<br>Date: Tue, 17 Mar 2020 00:29:11 GMT<br>Via: 1.1 varnish<br>Age: 2005390<br>Connection: keep-alive<br>X-Served-By: cache-hnd18746-HND<br>X-Cache: HIT<br>X-Cache-Hits: 1<br>X-Timer: S1584404952.927181,VS0,VE0<br>Vary: Fastly-SSL, X-Use-Renderer<br><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></td></tr></table></figure>

<h4 id="2-UDP客户端"><a href="#2-UDP客户端" class="headerlink" title="2.UDP客户端"></a>2.UDP客户端</h4><h1 id="Web攻击"><a href="#Web攻击" class="headerlink" title="Web攻击"></a>Web攻击</h1><h4 id="urllib2-库"><a href="#urllib2-库" class="headerlink" title="urllib2 库"></a>urllib2 库</h4><figure class="highlight plain"><table><tr><td class="code"><pre class="line-numbers language-hljs plain"><code class="language-hljs plain">import urllib2<br>body &#x3D; urllib2.urlopen("http:&#x2F;&#x2F;www.nostarch.com")<br>print body.read()<br><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2020/03/06/Linux/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Linux学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>简单搭建个属于你的个人博客</title>
    <url>/2020/02/18/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<hr>
<p>没想到都大三老狗了，还是个新人的水准，这就是菜吧。但还是要努力学习呀，希望有个好的结果！</p>
<p>废话不多说，开始小白的搭建博客教程吧~</p>
<h4 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h4><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git官网传送门</a></p>
<h4 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h4><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官网传送门</a></p>
<h4 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h4><p>Hexo拥有丰富的主题，比较推荐</p>
<p>win+R  cmd 输入以下命令，安装hexo包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure>

<h4 id="4-建立博客所在文件"><a href="#4-建立博客所在文件" class="headerlink" title="4.建立博客所在文件"></a>4.建立博客所在文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init chj</span><br><span class="line">cd chj</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>过程如下图：</p>
<p><img src="/2020/02/18/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png" alt="1234"></p>
<p>文件下的目录如下：</p>
<p><img src="/2020/02/18/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/cmd.jpg" alt="1234"></p>
<h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>这是网站的配值信息，可以在此配置大部分的参数。</p>
<h4 id="source"><a href="#source" class="headerlink" title="source"></a>source</h4><p>这是存放用户资源的地方，文章会存放在其中的_posts文件夹下，而一些标签、归档则是在source文件夹下。</p>
<h4 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h4><p>主题文件夹，Hexo 会根据主题来生成静态页面，博客所用的各种主题都存放在此目录下。</p>
<h4 id="5-git的基本操作"><a href="#5-git的基本操作" class="headerlink" title="5.git的基本操作"></a>5.git的基本操作</h4><p>安装上诉步骤简单部署好以后，输入以下命令，然后本地localhost:4000访问，就可以看到自己的博客了~</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="/2020/02/18/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4000.png" alt="1234"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>

<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>
<p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>
]]></content>
  </entry>
</search>
